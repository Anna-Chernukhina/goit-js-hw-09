{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAmBP,SAASS,EAAUC,GACjB,OAAOd,EAAAe,OAAOD,QAAQA,E,CAGxB,SAASE,EAAQC,GACf,OAAOjB,EAAAe,OAAOG,QAAQD,E,CAnCXE,SAASC,cAAc,SAe/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYtB,EAAKoB,EAALpB,MAAOuB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAWC,SAAS1B,EAAM2B,OACrBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EACtC9B,EAAc8B,EAAGH,GAAUI,KAAKpB,GAAWqB,MAAMlB,GACjDa,GAAYC,SAASH,EAAKI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let newDelay = parseInt(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, newDelay).then(onSuccess).catch(onError);\n    newDelay += parseInt(step.value);\n  }\n}\n\nfunction onSuccess(success) {\n  return Notify.success(success);\n}\n\nfunction onError(error) {\n  return Notify.failure(error);\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","success","Notify","$ce04d3a99e08e73b$var$onError","error","failure","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","newDelay","parseInt","value","i","then","catch"],"version":3,"file":"03-promises.befda804.js.map"}